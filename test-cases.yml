- summary: |
    На главной странице отображаются основные элементы
  requirement: |
    Сайт должен содержать шапку с формой регистрации, формой авторизации и кнопку перехода к пробной игре
  prerequisites: |
    Браузер Google Chrome последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    -
  steps: 
    - 1 Вставить в адресную строку браузера ссылку https://codebattle.hexlet.io
    - 2 Проверить наличие формы регистрации и авторизации в шапке сайта
    - 3 Проверить наличие кнопки перехода к пробной игре
  expected-result: |
    Сайт содержит шапку с формой регистрации, формой авторизации и кнопкой перехода к пробной игре
    
- summary: |
    Основные элементы главной страницы сайта отображаются корректно
  requirement: |
    Основные элементы сайта должны корректно отображаться
  prerequisites: |
    Браузер Google Chrome последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    -
  steps: 
    - 1 Убедиться, что взаимное расположение элементов сайта выровнены друг относительно друга
    - 2 Убедиться, что основные элементы имеют одинаковые отступы
    - 3 Убедиться что надписи кнопок и текст имеет необходимые отступы и не выходит за пределы поля сайта
    - 4 Убедиться, что основные элементы имеют единое цветовое оформление
    - 5 Убедиться, что основные элементы не имеют артефактов
  expected-result: |
    Основные элементы сайта отображаются корректно
 
- summary: |
    Успешный запуск пробной игры с ботом наугад для неавторизованного пользователя
  requirement: |
    Для неавторизованного пользователя должна быть возможность пробной игры с ботом, подобранной наугад
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    -
  steps:
    - 1 Нажать кнопку пробной игры с ботом "Try simple battle"
    - 2 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с ботом
    - 3 Открыть новую страницу браузера и перейти по ссылке https://codebattle.hexlet.io на главную страницу сайта 
    - 4 Повторить шаги №1 и №2
    - 5 Убедиться, что условие задачи в текущей игре с ботом отличается от условия задачи в предыдущей игре
  expected-result: |
    Пробная игра с ботом для неавторизованного пользователя подобрана наугад и успешно запущена
    
- summary: |
    Успешная регистрация пользователя
  requirement: |
    Должна быть возможность регистрации нового пользователя
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    e-mail = "Anna@anna.ru"
    Nickname = "hodor1"
    Password = "123456"
  steps:
    - 1 Нажать кнопку "Sign up" 
    - 2 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/users/new?locale=en&next=%2F и наличии формы регистрации
    - 3 Ввести тестовые значение в форму регистрации пользователя
    - 4 Нажать кнопку "Submit"
  expected-result: |
    Выполнено перенаправление на страницу https://codebattle.hexlet.io/#lobby
  postrequisites: |
    Выйти из учетной записи пользователя

- summary: |
    Проверка валидации данных поля Nickname при регистрации нового пользователя
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта форма регистрации нового пользователя https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    e-mail = "Anna@bella.ru"
    Password = "123456"
    Значение = ".", "?", "/", "<", ">", "< >", "}", "{ }", "+", "-", "=", "_"
  steps:
    - 1 Ввести в поле "Nickname" любую комбинацию из набора тестовых значений
    - 2 Заполнить оставшиеся поля тестовыми значениями и нажать кнопку "Submit"
  expected-result: |
    Появляется сообщение о том, что Nickname не может состоять только из спецсимволов или из пробелов. Регистрация не происходит
    
- summary: |
    Проверка валидации данных поля Email при указании корректного почтового домена
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта форма регистрации нового пользователя https://codebattle.hexlet.io/users/new?locale=en&next=%2F  
  test-data: |
    Nickname = "hodor12"
    Password = "123456"
    Значение = "?", "/", "<", ">", "< >", "{ }", "+", "="
    Домен = "@mail.ru"
  steps:
    - 1 Ввести в поле "Email" любую комбинацию из набора тестовых значений и тестовое доменное имя
    - 2 Заполнить оставшиеся поля тестовыми значениями
    - 3 Нажать "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Email", регистрация не происходит
 
- summary: |
    Проверка валидации данных поля Email при указании некорректного почтового домена
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта форма регистрации нового пользователя https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = "hodor9"
    Password = "123456"
    email = "hodor@й.ru"
  steps:
    - 1 Ввести в поле "Email" тестовое значение
    - 2 Заполнить оставшиеся поля тестовыми значениями
    - 3 Нажать "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Email", регистрация не происходит
 
- summary: |
    Проверка валидации данных поля Password при регистрации нового пользователя
  requirement: |
    Поле регистрации должны валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    Email = "hodor10@hodor.ru"
    Nickname = "hodor10"
    Password = "      " (шесть неразрывных пробелов)
  steps:
    - 1 Нажать кнопку "Sign up" и убедиться в перенаправлении браузера на форму регистрации пользователя https://codebattle.hexlet.io/users/new?locale=en&next=%2F
    - 2 Ввести в поле "Password" тестовое значение
    - 3 Заполнить оставшиеся поля тестовыми значениями
    - 4 Нажать кнопку "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Password", регистрация не происходит     
    
- summary: |
    Успешная авторизация пользователя
  requirement: |
    Должна быть возможность авторизации пользователя
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
  steps:
    - 1 Нажать кнопку "Sign in" и убедиться в перенаправлении браузера на форму авторизации пользователя https://codebattle.hexlet.io/session/new?locale=en&next=%2F
    - 2 Заполнить форму авторизации тестовыми данными
    - 3 Нажать кнопку "Submit"
  expected-result: |
    Пользователь успешно авторизован и выполнено перенаправление на страницу https://codebattle.hexlet.io/#lobby

- summary: |
    Успешный выбор определенной игры авторизованным пользователем
  requirement: |
    Авторизованный пользователь может выбрать определенную игру
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
  steps:
    - 1 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby 
    - 2 Нажать на кнопку "Create a game"
    - 3 В модальном окне установить тестовое значение "Choose task" и "Game type"
    - 4 Нажать кнопку "Create battle"
    - 5 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры с выбранным значением Task
    - 6 Завершить текущую игру любым способом
  expected-result: |
    Авторизованный пользователь может выбрать определенную игру

- summary: |
    Успешный выбор игры наугад авторизованным пользователем
  requirement: |
    Авторизованный пользователь может выбрать игру наугад
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "random task"
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 В модальном окне установить тестовое значение "Choose task" и "Game type"
    - 3 Нажать кнопку "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с выбранным значением "Task"
    - 5 Завершить текущую игру любым способом
  expected-result: |
    Авторизованный пользователь может выбрать игру наугад

- summary: |
    Успешный выбор уровня сложности игры авторизованным пользователем
  requirement: |
    Авторизованный пользователь может выбрать игру по уровню сложности
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    Nickname = "hodor"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    level1 = "1"
    level2 = "4"
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 В модальном окне установить тестовое значение "level1",  "Game type" и "Choose task"
    - 3 Нажать кнопку "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры с выбранным значением level
    - 5 Завершить текущую игру любым способом
    - 6 Повторить шаги 1-5 для тестового значения "level2"
  expected-result: |
    Авторизованный пользователь может выбрать уровень сложности игры
  
- summary: |
    Успешный выбор авторизованным пользователем игрового соперника в виде бота
  requirement: |
    Авторизованный пользователь может выбрать игру с ботом
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    Nickname = "hodor"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Choose task = "rect_area"    
    Game type = "With a bot"
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 4 Убедиться, что соперник в игре соответствует значению "Game Type"
    - 5 Завершить текущую игру любым способом
  expected-result: |
    Авторизованный пользователь может выбрать игру с ботом
  postrequisites: |
    Выйти из учетной записи пользователя
    
- summary: |
    Успешный выбор авторизованным пользователем игрового соперника в виде другого авторизованного пользователя
  requirement: |
    Авторизованный пользователь может выбрать игру с другим авторизованным пользователем
  prerequisites: |
    Пользователь Nickname1 авторизован в браузере1 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby
    Пользователь Nickname2 авторизован в браузере2 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby  
  test-data: |
    Браузер1  = "Google Chrome"
    Браузер2  = "Firefox"
    Nickname1 = "hodor1" 
    Nickname2 = "hodor2"
    e-mail1 = "Anna@anna.ru"
    Password1 = "123456"
    e-mail2 = "Anna1@anna.ru"
    Password2 = "123456"
    Game type = "With other users"
    Choose task = "rect_area"    
  steps:
    - 1 В окне пользователя  "Nickname1" нажать кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Поместить окно браузера1 в левую часть экрана
    - 4 Поместить окно браузера2 в правую часть экрана
    - 5 Перейти в окно браузера2
    - 6 списке игр найти игру пользователя с тестовым значением "Nickname1" и нажать "Fight"
    - 7 Убедиться, что в окне браузера1 началась игра с пользователем "Nickname2" 
    - 8 Убедиться, что в окне браузера2 началась игра с пользователем "Nickname1" 
    - 9 В списке игр найти игру пользователя с тестовым значением "Nickname1" и нажать "Fight"
    - 10 Убедиться, что в окне браузера Google Chrome началась игра с пользователем "Nickname2" 
    - 11 Убедиться, что в окне браузера Firefox началась игра с пользователем "Nickname1" 
    - 12 Завершить игру со стороны пользователя "Nickname1" нажав кнопку "Give up"
    - 14 Убедиться в завершении игры в окнах браузеров пользователей "Nickname1" и "Nickname2"
  expected-result: |
    Авторизованный пользователь успешно выбирает игру с другим авторизованным пользователем
  postrequisites: |
    Выйти из учетной записи пользователей "Nickname1" и "Nickname2" 
    
- summary: |
    Успешое направление авторизованным пользователем инвайта другу на вступление в игру 
  requirement: |
    Авторизованный пользователь может направить инвайт другу на вступление в игру 
  prerequisites: |
    Пользователь Nickname1 авторизован в браузере1 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby
    Пользователь Nickname2 авторизован в браузере2 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby    
  test-data: |
    Браузер1  = "Google Chrome"
    Браузер2  = "Firefox"
    Nickname1 = "hodor1" 
    Nickname2 = "hodor2"
    e-mail1 = "Anna@anna.ru"
    Password1 = "123456"
    e-mail2 = "Anna1@anna.ru"
    Password2 = "123456"
    Game type = "With a friend"
    Choose task = "rect_area"    
  steps:
    - 1 В окне пользователя  "Nickname1" нажать кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры
    - 3 Выбрать из списка в модальном окне пользователя "Nickname2" и нажать "Create battle"
    - 4 Убедиться в том, что пользователю "Nickname2" направлено приглашение вступить в игру
    - 5 Поместить окно браузера1 в левую часть экрана
    - 6 Поместить окно браузера2 в правую часть экрана
    - 7 В окне браузера2 убедиться в наличии инвайта вступить в игру от пользователя "Nickname1" и нажать "Accept"
    - 8 Убедиться, что в окне браузера1 началась игра с пользователем "Nickname2" 
    - 9 Убедиться, что в окне браузера2 началась игра с пользователем "Nickname1" 
    - 10 В окне пользователя "Nickname1" вставить тестовое решение в редактор кода и нажать кнопку "Check solution"
    - 11 Убедиться в выигрыше пользователя "Nickname1" 
    - 12 Убедиться в завершении игры в окнах браузеров пользователей "Nickname1" и "Nickname2"
  expected-result: |
     Авторизованный пользователь может направить инвайт другу на вступление в игру 
  postrequisites: |
    Выйти из учетной записи пользователей "Nickname1" и "Nickname2" 
 
- summary: |
    Успешное принятие инвайта другом от авторизованного пользователя
  requirement: |
    Авторизованный пользователь может принять инвайт от другого авторизованного пользователя 
  prerequisites: |
    Пользователь Nickname1 авторизован в браузере1 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby
    Пользователь Nickname2 авторизован в браузере2 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby   
  test-data: |
    Браузер1  = "Google Chrome"
    Браузер2  = "Firefox"
    Nickname1 = "hodor1" 
    Nickname2 = "hodor2"
    e-mail1 = "Anna@anna.ru"
    Password1 = "123456"
    e-mail2 = "Anna1@anna.ru"
    Password2 = "123456"
    Game type = "With a friend"
    Choose task = "rect_area"   
    Язык программирования = "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;" 
  steps:
    - 1 В окне пользователя "Nickname1" нажать кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры
    - 3 Выбрать из списка в модальном окне пользователя "Nickname2" и нажать кнопку "Create battle"
    - 4 Убедиться в том, что пользователю "Nickname2" направлено приглашение вступить в игру
    - 5 Поместить окно браузера1 в левую часть экрана
    - 6 Поместить окно браузера2 в правую часть экрана
    - 7 В окне браузера2 убедиться в наличии инвайта вступить в игру от пользователя "Nickname1" и нажать "Accept"
    - 8 Убедиться, что в окне браузера1 началась игра с пользователем "Nickname2" 
    - 9 Убедиться, что в окне браузера2 началась игра с пользователем "Nickname1" 
    - 10 В окне пользователя "Nickname2" вставить тестовое решение в редактор кода и нажать кнопку "Check solution"
    - 11 Убедиться в выигрыше пользователя "Nickname2" 
    - 12 Убедиться в завершении игры в окнах браузеров пользователей "Nickname1" и "Nickname2"
  expected-result: |
     Авторизованный пользователь успешно принимает инвайт от другого авторизованного пользователя 
  postrequisites: |
    Выйти из учетной записи пользователей "Nickname1" и "Nickname2" 
          
- summary: |
    Проверка пользовательского сценария игры в браузере Google Chrome
  requirement: |
    Сайт должен быть совместимым с последней, на момент тестирования, версией браузера Google Chrome
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования = "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"  
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 4 Нажать на вкладку "Task" 
    - 5 Убедиться, что во вкладке "Task"  есть таймер с обратным отсчетом игрового времени
    - 6 Убедиться, что во вкладке "Task"  есть выпадающее меню с переводом задачи на русский или английский язык
    - 7 Перейти в выпадающем меню на русский язык и убедиться в корректном переводе задачи на русский язык
    - 8 Отправить любое текстовое сообщение в чате и убедиться, что чат для общения работает
    - 9 Убедиться, что в игре есть редактор кода игрока и соперника
    - 10 Убедиться, что в редакторе кода отображается ввод кода соперником в режиме реального времени
    - 11 Убедиться, что в игре над редактором кода есть кнопки "Check solution", "Reset editor" и "Give up"
    - 12 Убедься, что в игре над редактором кода есть выпадающе меню с выбором языков программирования
    - 13 Выбрать язык программирования с тестовым значением 
    - 14 Набрать в редакторе кода любые символы
    - 15 Перейти на вкладку Output 
    - 16 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения об ошибке в решении задачи 
    - 17 Нажать кнопку "Reset editor" и убедиться, что символы, набранные в редакторе кода на шаге № 14, исчезли
    - 18 Нажать кнопку "Give up" и убедиться в том, что игрок проиграл и появились кнопка "Rematch"
    - 19 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 20 Дождаться решения задачи ботом и убедиться в том, что игрок проиграл и появилась кнопка "Rematch"
    - 21 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 22 Выбрать язык программирования с тестовым значением 
    - 23 Вставить тестовое решение в редактор кода
    - 24 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения о правильном решении задачи игроком
    - 25 Убедиться в том, что игрок выиграл и появилась кнопка "Rematch"
    - 26 Убедиться в наличии кнопки "Back to home"
    - 27 Нажать кнопку "Back to home" и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
  expected-result: |
    Основной функционал игры корректно отображается и работает в браузере Google Chrome

- summary: |
    Проверка пользовательского сценария игры в браузере Firefox
  requirement: |
    Сайт должен быть совместимым с последней, на момент тестирования, версией браузера Firefox
  prerequisites: |
    Браузер Firefox, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования = "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 4 Нажать на вкладку "Task" 
    - 5 Убедиться, что во вкладке "Task"  есть таймер с обратным отсчетом игрового времени
    - 6 Убедиться, что во вкладке "Task"  есть выпадающее меню с переводом задачи на русский или английский язык
    - 7 Перейти в выпадающем меню на русский язык и убедиться в корректном переводе задачи на русский язык
    - 8 Отправить любое текстовое сообщение в чате и убедиться, что чат для общения работает
    - 9 Убедиться, что в игре есть редактор кода игрока и соперника
    - 10 Убедиться, что в редакторе кода отображается ввод кода соперником в режиме реального времени
    - 11 Убедиться, что в игре над редактором кода есть кнопки "Check solution", "Reset editor" и "Give up"
    - 12 Убедься, что в игре над редактором кода есть выпадающе меню с выбором языков программирования
    - 13 Выбрать язык программирования с тестовым значением 
    - 14 Набрать в редакторе кода любые символы
    - 15 Перейти на вкладку Output 
    - 16 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения об ошибке в решении задачи 
    - 17 Нажать кнопку "Reset editor" и убедиться, что символы, набранные в редакторе кода на шаге № 14, исчезли
    - 18 Нажать кнопку "Give up" и убедиться в том, что игрок проиграл и появились кнопка "Rematch"
    - 19 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 20 Дождаться решения задачи ботом и убедиться в том, что игрок проиграл и появилась кнопка "Rematch"
    - 21 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 22 Выбрать язык программирования с тестовым значением 
    - 23 Вставить тестовое решение в редактор кода
    - 24 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения о правильном решении задачи игроком
    - 25 Убедиться в том, что игрок выиграл и появилась кнопка "Rematch"
    - 26 Убедиться в наличии кнопки "Back to home"
    - 27 Нажать кнопку "Back to home" и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
  expected-result: |
    Основной функционал игры корректно отображается и работает в браузере Firefox

- summary: |
    Проверка пользовательского сценария игры в браузере Explorer
  requirement: |
    Сайт должен быть совместимым с последней, на момент тестирования, версией браузера Explorer
  prerequisites: |
    Браузер Explorer, последняя версия
    Пользователь авторизован с тестовыми значениями "e-mail" и "Password"
    Открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования = "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 Нажать на кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 4 Нажать на вкладку "Task" 
    - 5 Убедиться, что во вкладке "Task"  есть таймер с обратным отсчетом игрового времени
    - 6 Убедиться, что во вкладке "Task"  есть выпадающее меню с переводом задачи на русский или английский язык
    - 7 Перейти в выпадающем меню на русский язык и убедиться в корректном переводе задачи на русский язык
    - 8 Отправить любое текстовое сообщение в чате и убедиться, что чат для общения работает
    - 9 Убедиться, что в игре есть редактор кода игрока и соперника
    - 10 Убедиться, что в редакторе кода отображается ввод кода соперником в режиме реального времени
    - 11 Убедиться, что в игре над редактором кода есть кнопки "Check solution", "Reset editor" и "Give up"
    - 12 Убедься, что в игре над редактором кода есть выпадающе меню с выбором языков программирования
    - 13 Выбрать язык программирования с тестовым значением 
    - 14 Набрать в редакторе кода любые символы
    - 15 Перейти на вкладку Output 
    - 16 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения об ошибке в решении задачи 
    - 17 Нажать кнопку "Reset editor" и убедиться, что символы, набранные в редакторе кода на шаге № 14, исчезли
    - 18 Нажать кнопку "Give up" и убедиться в том, что игрок проиграл и появились кнопка "Rematch"
    - 19 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 20 Дождаться решения задачи ботом и убедиться в том, что игрок проиграл и появилась кнопка "Rematch"
    - 21 Нажать кнопку "Rematch" и убедиться в повторном запуске игры с ботом
    - 22 Выбрать язык программирования с тестовым значением 
    - 23 Вставить тестовое решение в редактор кода
    - 24 Нажать кнопку "Сheck solution" и убедиться в появлении системного сообщения о правильном решении задачи игроком
    - 25 Убедиться в том, что игрок выиграл и появилась кнопка "Rematch"
    - 26 Убедиться в наличии кнопки "Back to home"
    - 27 Нажать кнопку "Back to home" и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
  expected-result: |
    Основной функционал игры корректно отображается и работает в браузере Explorer

- summary: |
    Успешное отслеживание авторизованным пользователем игры другого пользователя
  requirement: |
    Другой авторизованный пользователь может следить за ходом игры
  prerequisites: |
    Пользователь Nickname1 авторизован в браузере1 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby
    Пользователь Nickname2 авторизован в браузере2 и открыта страница авторизованного пользователя https://codebattle.hexlet.io/#lobby   
  test-data: |
    Браузер1 = "Google Chrome, последняя версия"
    Браузер2 = "Mozilla Firefox, последняя версия"
    Nickname1 = "hodor1"
    e-mail1 = "Anna@anna.ru"
    Password1 = "123456"
    Nickname2 = "hodor2"
    e-mail2 = "Anna1@anna.ru"
    Password2 = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Actions = "Show"
  steps:
    - 1 В окне браузера 1 на странице авторизованного пользователя "Nickname1" нажать кнопку "Create a game"
    - 2 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 3 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 4 Свернуть окно браузера1 с запущенной игрой
    - 5 Перейти в окно браузера2 на страницу авторизованного пользователя "Nickname2"
    - 6 В списке текущих игр найти строку, указывающую на игру пользователя "Nickname1" с ботом
    - 7 Нажать на кнопку со значением " Actions" в найденной строке
    - 8 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/...
    - 9 Убедиться в том, что пользователь "Nickname2" отслеживает игру между ботом и пользователем "Nickname1"
  expected-result: |
    Авторизованный пользователь успешно отслеживает игру другого пользователя
  postrequisites: |
    Выйти из учетных записей пользователей "Nickname1" и "Nickname2"

- summary: |
    Проверка успешного окончания игры при решении задачи быстрее соперника
  requirement: |
    Выигрывает игрок, который быстрее решит задачу
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница авторизации пользователя https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
    - 2 Нажать кнопку "Create a game"
    - 3 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 5 В текущей игре ввести в редактор кода значение тестового решения
    - 6 Убедиться в окончании игры и появлении сообщения о победе над соперником
  expected-result: |
    Пользователь побеждает в игре при решении задачи быстрее соперника
  postrequisites: |
    Выйти из учетной записи пользователя "Nickname"

- summary: |
    Успешное изменение рейтинга авторизованного пользователя
  requirement: |
    Авторизованный пользователь получает очки, на основе которых строится рейтинг за неделю, месяц и за все время
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница авторизации пользователя https://codebattle.hexlet.io/session/new?locale=en&next=%2F 
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
    - 2 Нажать кнопку "Create a game"
    - 3 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 5 В текущей игре ввести в редактор кода значение тестового решения
    - 6 Завершить текущую игру и проверить изменение рейтинга в профиле пользователя
    - 7 Заново создать любую игру с тестовым значением "Game type" и выбрать "Give up"
    - 8 Завершить игру и проверить изменение рейтинга в профиле пользователя
  expected-result: |
    Рейтинг авторизованного пользователя успешно изменен
  postrequisites: |
    Выйти из учетной записи пользователя "Nickname"
    
- summary: |
    Успешное изменение пользователем языка программирования в процессе игры
  requirement: |
    Оба игрока могут менять язык программирования в процессе игры
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница авторизации пользователя https://codebattle.hexlet.io/session/new?locale=en&next=%2F   
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования1 = "NodeJS" 
    Язык программирования2 = "Java"
    Язык программирования3 = "C++" 
  steps:
    - 1 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
    - 2 Нажать кнопку "Create a game"
    - 3 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 5 Установить последовательно тестовые значения "язык программирования" и убедиться в возможности переключения языка программирования в процессе игры
  expected-result: |
    Язык программирования успешно изменен в процессе игры
  postrequisites: |
    Выйти из учетной записи пользователя "Nickname" 
   
- summary: |
    Успешный просмотр записи завершенной игры
  requirement: |
    Завершенная игра должна быть доступна в записи и редактор кода выглядит как проигрыватель
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта страница авторизации пользователя https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
    Actions = "Show"
  steps:
    - 1 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
    - 2 Нажать кнопку "Create a game"
    - 3 Установить тестовые значения в модальном окне выбора игры и нажать "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/136075 и запуске игры
    - 5 В текущей игре ввести в редактор кода значение тестового решения
    - 6 Нажать "Check solution" и завершить текущую игру
    - 7 Вставить в адресную строку браузера url https://codebattle.hexlet.io/#completedGames
    - 4 Выбрать из списка завершенную игру и нажать кнопку "Actions" с тестовым значением 
    - 5 Убедиться, что редактор кода выглядит как проигрыватель
  expected-result: |
    Завершенная игра доступна в записи и редактор кода выглядит как проигрыватель
    
- summary: |
    Проверка поддержки расширения шифрования SSL/TLS в протоколе передачи данных HTTP 
  requirement: |
    Протокол передачи данных HTTP должен поддерживать расширения шифрования SSL/TLS 
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта главная страница https://codebattle.hexlet.io/
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
  steps: 
    - 1 В адресной строке браузера изменить ссылку заменив  "https" на "http" и перейти по измененной ссылке
    - 2 Убедиться, что значение "https" не изменилось на "http"
    - 3 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на страницу https://codebattle.hexlet.io/#lobby
    - 4 Повторить шаги №1 и №2
  expected-result: |
    URL ссылка автоматически меняет наименование протокола с "http" на "https" и успешно загружает страницы сайта

- summary: |
    Сайт корректно открывается на типовом разрешении экрана мобильных устройств и подстаивается под него (выполняется адаптивность)
  requirement: |
    Размеры кнопок, отступы и расположение форм не должны меняться при переключении  языка текста с русского на английский и обратно
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта страница https://codebattle.hexlet.io
  test-data: |
    Размер1 = 375 пикселей по ширине (типовый экран мобильного)
    Размер2 = 1600 пикселей по ширине (типовый экран монитора)
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
  steps:
    - 1 Эмулировать просмотр каталога на экране мобильных устройств с установленным тестовым размером1
    - 2 Эмулировать просмотр каталога на экране мобильных устройств с установленным тестовым размером2
    - 3 Убедиться в том, что
    - Оновной контента сайта сохраняется
    - Дизайн и функционал сайта сохраняется
    - При изменении размера1 на размер2 сохраняется плавность переходов страницы
    - При изменении размера2 на размер1 сохраняется плавность переходов страницы
    - 4 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на https://codebattle.hexlet.io/#lobby 
    - 5 Повторить шаги 1-3 
    - 6 Запустить игру с тестовыми данными
    - 7 Повторить шаги 1-3 
  expected-result: |
    Сайт открывается на типовом разрешении экрана мобильных устройств и подстаивается под него

- summary: |
    Игра успешно адаптирована для экрана монитора при переводе текста с русского на английский язык
  requirement: |
    Размеры кнопок, расположение элементов в формах и дизайн должны сохраняться при переключении  языка текста с русского на английский и обратно
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными
    В браузере открыты две одинаковые вкладки URL = https://codebattle.hexlet.io/games/135387
    В каждой вкладке каталога установлена эмуляция экрана монитора с типовым разрешением экрана = 1600 пикселей по ширине
    В первой вкладке установлен язык "English"
    Во второй вкладке установлен язык "Русский"
  test-data: |
    Nickname = "hodor1"
    e-mail = "Anna@anna.ru"
    Password = "123456"
  steps: 
    - 1 Сравнить размеры и расположение кнопок между вкладками с русским и английским языком
    - 2 Убедиться в корректности перевода
    - 3 Убедиться в том, что размеры кнопок сохраняются
    - 4 Убедиться в том, что взаимное расположение элементов сохраняется
  expected-result: |
    В игре сохранены размеры конопок, взаимное расположение элементов и дизайн при изменении языка 
    
- summary: |
    Отображается сообщение об отсутствии подключения к интернету
  requirement: |
    При отсутствии соединения с сетью интернет должно отображаться стандартное текстовое сообщение браузера об отсутствии подключения
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь неавторизован
    Открыта страница браузера https://codebattle.hexlet.io
    Установлена эмуляция скорости передачи данных интернета = Offline
  test-data: |
    -
  steps:
    - 1 Обновить страницу браузера
  expected-result: |
    Появилось сообщение об отсутствии подключения к интернету    
