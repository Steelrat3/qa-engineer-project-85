- summary: |
    На главной странице отображаются основные элементы
  requirement: |
    Сайт должен содержать шапку с формой регистрации, формой авторизации и кнопку перехода к пробной игре
  prerequisites: |
    Браузер Google Chrome последняя версия
  test-data: |
    -
  steps: 
    - 1 Вставить в адресную строку браузера url https://codebattle.hexlet.io
    - 2 Проверить наличие формы регистрации и авторизации в шапке сайта
    - 3 Проверить наличие кнопки перехода к пробной игре
  expected-result: |
    Сайт содержит шапку с формой регистрации, формой авторизации и кнопкой перехода к пробной игре
    
- summary: |
    Основные элементы главной страницы сайта соответствуют требованиям дизайна
  requirement: |
    Основные элементы сайта должны соответствовать требованиям дизайна
  prerequisites: |
    Браузер Google Chrome последняя версия
  test-data: |
    -
  steps: 
    - 1 Вставить в адресную строку браузера url https://codebattle.hexlet.io
    - 2 Убедиться, что расположение и цвет элементов сайта соответствует требованиям дизайна
  expected-result: |
    Основные элементы главной страницы сайта соответствуют требованиям дизайна
 
- summary: |
    Успешный запуск пробной игры с ботом наугад для неавторизованного пользователя
  requirement: |
    Для неавторизованного пользователя должна быть возможность пробной игры с ботом, подобранной наугад
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница браузера с url https://codebattle.hexlet.io
  test-data: |
    -
  steps:
    - 1 Нажать кнопку пробной игры с ботом
    - 2 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с ботом
    - 3 Вставить в url https://codebattle.hexlet.i и повторить запуск пробной игры с ботом
    - 4 Убедиться, что условие задачи в текущей игре с ботом отличается от условия задачи в предыдущей игре
  expected-result: |
    Пробная игра с ботом для неавторизованного пользователя подобрана наугад и успешно запущена
    
- summary: |
    Успешная регистрация пользователя
  requirement: |
    Должна быть возможность регистрации нового пользователя
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница браузера с url https://codebattle.hexlet.io
  test-data: |
    e-mail = "Anna@anna.ru"
    Логин = "hodor1"
    Пароль = "123456"
  steps:
    - 1 Открыть форму регистрации пользователя
    - 2 Ввести логин пользователя
    - 3 Ввести почту пользователя
    - 4 Ввести пароль пользователя
    - 5 Подтвердить пароль пользователя
    - 6 Нажать кнопку "Регистрация"
  expected-result: |
    Выполнено перенаправление на url https://codebattle.hexlet.io/#lobby
  postrequisites: |
    Выйти из учетной записи пользователя

- summary: |
    Проверка валидации данных поля Nickname при регистрации нового пользователя
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница регистрации нового пользователя 
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Значение = ".", "?", "/", "<", ">", "< >", "}", "{ }", "+", "-", "=", "_"
  steps:
    - 1 Ввести в поле "Nickname" любую комбинацию из набора тестовых значений
    - 2 Заполнить оставшиеся поля тестовыми значениями
    - 3 Нажать "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Nickname", регистрация не происходит.
    
- summary: |
    Проверка валидации данных поля Email при регистрации нового пользователя
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница регистрации нового пользователя 
  test-data: |
    Nickname = "hodor6"
    Пароль = "123456"
    Значение = ".", "?", "/", "<", ">", "< >", "}", "{ }", "+", "-", "=", "_"
    Домен = "@mail.ru"
  steps:
    - 1 Ввести в поле "Email" любую комбинацию из набора тестовых значений и тестовое доменное имя
    - 2 Заполнить оставшиеся поля тестовыми значениями
    - 3 Нажать "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Email", регистрация не происходит 
    
- summary: |
    Проверка валидации данных поля Password при регистрации нового пользователя
  requirement: |
    Поле регистрации должно валидировать данные, вводимые пользователем
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница регистрации нового пользователя 
  test-data: |
    Nickname = "hodor6"
    Пароль = "      " (шесть неразрывных пробелов)
  steps:
    - 1 Ввести в поле "Email" тестовое значение
    - 2 Заполнить оставшиеся поля тестовыми значениями
    - 3 Нажать "Submit"
  expected-result: |
    Появляется уведомление о недопустимых символах в поле "Password", регистрация не происходит     

- summary: |
    Успешная авторизация пользователя
  requirement: |
    Должна быть возможность авторизации пользователя
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница браузера с url https://codebattle.hexlet.io
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
  steps:
    - 1 Открыть форму регистрации пользователя
    - 2 Ввести почту пользователя
    - 3 Ввести пароль пользователя
    - 4 Нажать кнопку "Подтвердить"
  expected-result: |
    Пользователь успешно авторизован и выполнено перенаправление на url https://codebattle.hexlet.io/#lobby

- summary: |
    Успешный выбор типа игры авторизованным пользователем
  requirement: |
    Авторизованный пользователь может выбрать определенную игру или выбрать игру наугад
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Открыта страница браузера с url https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task1 = "random task"
    Choose task2 = "rect_area"
  steps:
    - 1 Нажать на кнопку "Создать игру"
    - 2 В модальном окне установить тестовое значение "Game Type"
    - 3 В модальном окне установить тестовое значение "Choose task1" 
    - 4 Нажать кнопку "Create battle"
    - 5 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с выбранным значением Task
    - 6 Завершить текущую игру
    - 7 Повторить шаги 1-6 для тестового значения "Choose task2"
  expected-result: |
    Авторизованный пользователь может выбрать как определенную игру, так и игру наугад

- summary: |
    Успешный выбор уровня сложности игры авторизованным пользователем
  requirement: |
    Авторизованный пользователь может выбрать игру по уровню сложности
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Открыта страница браузера с url https://codebattle.hexlet.io/#lobby 
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    level1 = "1"
    level2 = "4"
  steps:
    - 1 Нажать на кнопку "Создать игру"
    - 2 В модальном окне установить тестовое значение "level1"
    - 3 Нажать кнопку "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с выбранным значением level
    - 5 Завершить текущую игру
    - 6 Повторить шаги 1-5 для тестового значения "level2"
  expected-result: |
    Авторизованный пользователь может выбрать уровень сложности игры
  
- summary: |
    Успешный выбор авторизованным пользователем игрового соперника 
  requirement: |
    Авторизованный пользователь может выбрать игру с ботом, другим авторизованным пользователем или другом (по ссылке)
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Авторизован пользователь с тестовыми данными "логин1"
    Открыта страница браузера с url https://codebattle.hexlet.io/#lobby 
  test-data: |
    логин1 = "hodor1"
    e-mail1 = "Anna@anna.ru"
    Пароль1 = "123456"
    логин2 = "hodor2"
    e-mail2 = "Anna1@anna.ru"
    Пароль2 = "123456"
    Game type1 = "With a bot"
    Game type2 = "With other users"
    Game type3 = "With a friend"
  steps:
    - 1 Нажать на кнопку "Создать игру"
    - 2 В модальном окне установить тестовое значение "Game Type1"
    - 3 Нажать кнопку "Create battle"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и запуске игры с выбранным значением Game Type
    - 5 Завершить текущую игру
    - 6 Повторить шаги 1-5 для тестового значения "Game Type2"
    - 7 Нажать на кнопку "Создать игру"
    - 8 В модальном окне установить тестовое значение "Game Type3" 
    - 9 Направить приглашение пользователю c тестовым значением "логин2"
    - 10 Авторизоваться под пользователем "логин2" 
    - 11 Убедиться в получении ссылки от пользователя "логин1" и начать игру.
    - 12 Завершить текущую игру
  expected-result: |
    Авторизованный пользователь может выбрать игру с ботом, другим авторизованным пользователем или другом (по ссылке)
  postrequisites: |
    Выйти из учетной записи пользователя

- summary: |
    Проверка основного функционала игры
  requirement: |
    Оба игрока в процессе игры видят друг у друга в режиме реального времени редактор с кодом, таймер с обратным отсчетом игрового времени, чат для общения
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Создана любая игра с тестовыми значениями
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования = "NodeJS" 
  steps:
    - 1 Убедиться в наличии таймера с обратным отсчетом игрового времени
    - 2 Отправить любое текстовое сообщение в чате и убедиться в работе чата для общения 
    - 3 Убедиться, что вывод кода соперника отображается в режиме реального времени
  expected-result: |
      Оба игрока в процессе игры видят друг у друга в режиме реального времени редактор с кодом, таймер с обратным отсчетом игрового времени, чат для общения

- summary: |
    Успешное отслеживание авторизованным пользователем игры другого пользователя
  requirement: |
    Другой авторизованный пользователь может следить за ходом игры
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Авторизован пользователь с тестовыми данными "логин1"
    Создана любая игра с тестовым значением "Game type"
  test-data: |
    логин1 = "hodor1"
    e-mail1 = "Anna@anna.ru"
    Пароль1 = "123456"
    логин2 = "hodor2"
    e-mail2 = "Anna1@anna.ru"
    Пароль2 = "123456"
    Game type = "With a bot"
    Actions = "Show"
  steps:
    - 1 Авторизоваться под пользователем "логин2" 
    - 2 В списке текущих игр найти игру пользователя "логин1" с ботом
    - 3 Нажать на кнопку со значением " Actions"
    - 4 Убедиться в перенаправлении браузера по адресу https://codebattle.hexlet.io/games/... и отслеживании игры между ботом и пользователем с "логин1"
  expected-result: |
    Авторизованный пользователь успешно отслеживает игру другого пользователя
  postrequisites: |
    Выйти из учетной записи пользователя

- summary: |
    Проверка победного окончания игры при решении задачи быстрее соперника
  requirement: |
    Выигрывает игрок, который быстрее решит задачу
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Создана любая игра с тестовыми значениями
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 В текущей игре ввести в редактор кода значение тестового решения
    - 2 Убедиться в окончании игры и появлении сообщения о победе над соперником
  expected-result: |
    Пользователь побеждает в игре при решении задачи быстрее соперника

- summary: |
    Успешное изменение рейтинга авторизованного пользователя
  requirement: |
    Авторизованный пользователь получает очки, на основе которых строится рейтинг за неделю, месяц и за все время
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Создана любая игра с тестовыми значениями
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
  steps:
    - 1 В текущей игре ввести в редактор кода значение тестового решения
    - 2 Завершить текущую игру и проверить изменение рейтинга в профиле пользователя
    - 3 Заново создать любую игру с тестовым значением Game type и выбрать "сдаться"
    - 4 Завершить игру и проверить изменение рейтинга в профиле пользователя
  expected-result: |
    Рейтинг авторизованного пользователя успешно изменен

- summary: |
    Успешное изменение пользователем языка программирования в процессе игры
  requirement: |
    Оба игрока могут менять язык программирования в процессе игры
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Создана любая игра с тестовыми значениями
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования1 = "NodeJS" 
    Язык программирования2 = "Java"
    Язык программирования3 = "C++" 
  steps:
    - 1 Установить последовательно тестовые значения "язык программирования" и убедиться в возможности переключения языка программирования в процессе игры
  expected-result: |
    Язык программирования успешно изменен в процессе игры
    
- summary: |
    Успешный просмотр записи завершенной игры
  requirement: |
    Завершенная игра должна быть доступна в записи и редактор кода выглядит как проигрыватель
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
    Создана игра с тестовыми значениями
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
    Тестовое решение = 
    "const _ = require("lodash");
    const R = require("rambda");
    const solution = (width, length) => {
    return width * length;
    };
    module.exports = solution;"
    Actions = "Show"
  steps:
    - 1 В текущей игре ввести в редактор кода значение тестового решения
    - 2 Завершить текущую игру
    - 3 Вставить в адрессную строку браузера url https://codebattle.hexlet.io/#completedGames
    - 4 Выбрать из списка завершенную игру и нажать кнопку "Actions" с тестовым значением 
    - 5 Убедиться, что редактор кода выглядит как проигрыватель
  expected-result: |
    Завершенная игра доступна в записи и редактор кода выглядит как проигрыватель

- summary: |
    Соответствие страницы сайта формату SPA
  requirement: |
    Должна быть разработана веб-версия сайта в виде SPA без перезагрузки страницы
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
  steps: 
    - 1 На странице сайта последовательно открыть вкладки "lobby", "Tournaments", "Completed games" и "Create a game" 
    - 2 Убедиться в отсутствии перегрузки страницы браузера
  expected-result: |
    Браузер не перегружает страницу сайта и HTML код страницы не меняется
    
- summary: |
    Протокол передачи данных HTTP поддерживает расширения шифрования SSL/TLS
  requirement: |
    Протокол передачи данных HTTP должен поддерживать расширения шифрования SSL/TLS 
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Пользователь авторизован с тестовыми данными 
  test-data: |
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
  steps: 
    - 1 В адресной строке браузера изменить URL ссылку ручным вводом протокола "http" вместо "https"
    - 2 Выполнить переход по измененной ссылке с протоколом "http"
  expected-result: |
    URL ссылка автоматически меняет наименование протокола с "http" на "https" и успешно загружает страницу

- summary: |
    Сайт корректно открывается на типовом разрешении экрана мобильных устройств и подстаивается под него (выполняется адаптивность)
  requirement: |
    Размеры кнопок, отступы и расположение форм не должны меняться при переключении  языка текста с русского на английский и обратно
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница браузера с url https://codebattle.hexlet.io
  test-data: |
    Размер1 = 375 пикселей по ширине (типовый экран мобильного)
    Размер2 = 1600 пикселей по ширине (типовый экран монитора)
    e-mail = "Anna@anna.ru"
    Пароль = "123456"
    Game type = "With a bot"
    Choose task = "rect_area"
    Язык программирования= "NodeJS"
  steps:
    - 1 Эмулировать просмотр каталога на экране мобильных устройств с установленным тестовым размером1
    - 2 Эмулировать просмотр каталога на экране мобильных устройств с установленным тестовым размером2
    - 3 Убедиться в том, что
    - Оновной контента сайта сохраняется
    - Дизайн и функционал сайта сохраняется
    - При изменении размера1 на размер2 сохраняется плавность переходов страницы
    - При изменении размера2 на размер1 сохраняется плавность переходов страницы
    - 4 Авторизовать пользователя с тестовыми данными и убедиться в перенаправлении браузера на https://codebattle.hexlet.io/#lobby 
    - 5 Повторить шаги 1-3 
    - 6 Запустить игру с тестовыми данными
    - 7 Повторить шаги 1-3 
  expected-result: |
    Сайт открывается на типовом разрешении экрана мобильных устройств и подстаивается под него

- summary: |
    Игра успешно адаптирована для экрана монитора при переводе текста с русского на английский язык
  requirement: |
    Размеры кнопок, расположение элементов в формах и дизайн должны сохраняться при переключении  языка текста с русского на английский и обратно
  prerequisites: |
    Браузер Google Chrome, последняя версия
    В браузере открыты две одинаковые вкладки URL = https://codebattle.hexlet.io/games/135387
    В каждой вкладке каталога установлена эмуляция экрана монитора с типовым разрешением экрана = 1600 пикселей по ширине
    В первой вкладке установлен язык "English"
    Во второй вкладке установлен язык "Русский"
  test-data: |
    -
  steps: 
    - 1 Сравнить размеры и расположение кнопок между вкладками с русским и английским языком
    - 2 Убедиться в том, что размеры кнопок сохраняются
    - 3 Убедиться в том, что взаимное расположение элементов сохраняется
  expected-result: |
    В игре сохранены размеры конопок, взаимное расположение элементов и дизайн при изменении языка 
    
- summary: |
    Отображается сообщение об отсутствии подключения к интернету
  requirement: |
    При отсутствии соединения с сетью интернет должно отображаться стандартное текстовое сообщение браузера об отсутствии подключения
  prerequisites: |
    Браузер Google Chrome, последняя версия
    Открыта страница браузера с url https://codebattle.hexlet.io
    Установлена эмуляция скорости интернета = Offline
  test-data: |
    -
  steps:
    - 1 Обновить страницу браузера
  expected-result: |
    Появилось сообщение об отсутствии подключения к интернету    
